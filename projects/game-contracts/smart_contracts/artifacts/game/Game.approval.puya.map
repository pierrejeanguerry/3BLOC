{
  "version": 3,
  "sources": [
    "../../game/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;AAAA;AAMK;;AAAA;AAAA;AAAA;;AAAA;AANL;;;AAMK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;;AAAA;AAAA;AAAA;;AAAA;AA5CL;;;AAAA;;;AAAA;;;AAAA;AA4CK;;;AAAA;AAAA;AA+BA;;AAAA;AAAA;AAAA;;AAAA;AA3EL;;;AA2EK;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AAvFL;;;AAAA;;;AAAA;;;AAAA;AAuFK;;;AAAA;AAAA;AAvFL;;AAAA;;;;;;;;;AAAA;AAAA;AAMA;;;AAU6B;AAAlB;;AAAA;AAAA;AAAA;;AAAA;;;AAE+B;;AAAZ;AADM;;;;AAAA;AAGZ;;;;;;;;;;AAHY;AAAA;;AAAA;AAAxB;AAAU;;AAAV;AAAA;AAAA;;AAAA;AAAA;AAKG;AAAU;;AAAV;AAAA;AAAA;AAAP;AAER;;;AAWY;;AAAA;;AAAoB;;AAApB;AADJ;AAGO;;AAAA;;AAAkB;AAAlB;AAAA;AAAA;AAAA;AAAA;;AAAP;AAGI;AAAA;AAAA;AAAA;;;AAAA;AAA2C;;AAAA;;AAA3C;AADgC;AAApC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAGO;AAAA;AAAA;;;AAAP;AAER;;;AAQ6B;AAAd;;AAAA;AAAA;AAAA;;AAAP;AACmB;AAAZ;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEe;AAAU;;AAAV;AAAA;AAAA;AAAA;;;AAAA;AACD;;AAAA;AAAA;AAAA;;;AAAA;AAEN;;AAAA;AAAA;AAAJ;AAAA;AACoB;AAAA;AAAT;;;AAAA;AAGF;AAAA;;AAAA;AAAyB;AAAA;;AAAA;AAAzB;AADN;AAAA;AAAP;AAK4C;AAAZ;AAAhC;AAAU;;AAAV;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAG0B;;AAAA;;AAAA;AAAV;AACI;AAAjB;AAAA;AAAA;AAAA;AAAA;;AAAX;;;AACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;AAEA;;AAAA;AAAA;;AAEZ;;;AAQY;;AAAc;;AAAd;AADJ;AAGqB;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAV;AAAX;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;AAQ6B;AAAd;;AAAA;AAAA;AAAA;;AAAP;AACmB;AAAZ;;AAAA;AAAA;AAAA;AAAA;;AAAP;AAEe;AAAU;;AAAV;AAAA;AAAA;AAAA;;;AAAA;AAAf;AACc;AAAA;AAAA;AAAA;;;AAAA;AAAd;AAES;AAAA;AAAJ;AAAA;AAAL;;AAAI;AACW;AAAA;AAAT;;;AAAA;AAEoB;;AAAA;;AAAA;AAAV;AACQ;AAAjB;AAAA;AAAA;;AAAA;AAAA;;AAAP;AAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACG;AAAA;AAAA;AAAA;AAAA;AAAX;;;AACY;;AAAA;;AAIgB;;AAAA;;AAAA;AAAhB;;AAAA;AAAA;;AAAA;AAD4B;AAAhC;AAAU;;AAAV;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.game.contract.Game.approval_program",
      "params": {},
      "block": "smart_contracts.game.contract.Game.approval_program",
      "stack_in": [],
      "op": "intcblock 1 0 8 400"
    },
    "8": {
      "op": "bytecblock \"user\" \"asset\" 0x151f7c75 \"user_asset\""
    },
    "37": {
      "callsub": "smart_contracts.game.contract.Game.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "40": {
      "op": "return",
      "stack_out": []
    },
    "41": {
      "subroutine": "smart_contracts.game.contract.Game.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "44": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "46": {
      "op": "bz __puya_arc4_router___bare_routing@9",
      "stack_out": []
    },
    "49": {
      "op": "pushbytess 0x1431f856 0xec476dbd 0x828f30d3 0x69f5c863 0xe61837dc // method \"register(string)(uint64,string,uint64)\", method \"fund_account(pay)uint64\", method \"buy_asset(byte[],uint64)void\", method \"admin_upsert_asset((string,string,uint64))void\", method \"sellback_asset(byte[],uint64)void\""
    },
    "76": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(admin_upsert_asset((string,string,uint64))void)",
        "Method(buy_asset(byte[],uint64)void)",
        "Method(fund_account(pay)uint64)",
        "Method(register(string)(uint64,string,uint64))",
        "Method(sellback_asset(byte[],uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(register(string)(uint64,string,uint64))",
        "Method(fund_account(pay)uint64)",
        "Method(buy_asset(byte[],uint64)void)",
        "Method(admin_upsert_asset((string,string,uint64))void)",
        "Method(sellback_asset(byte[],uint64)void)",
        "tmp%2#0"
      ]
    },
    "79": {
      "op": "match __puya_arc4_router___register_route@2 __puya_arc4_router___fund_account_route@3 __puya_arc4_router___buy_asset_route@4 __puya_arc4_router___admin_upsert_asset_route@5 __puya_arc4_router___sellback_asset_route@6",
      "stack_out": []
    },
    "91": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "92": {
      "retsub": true,
      "op": "retsub"
    },
    "93": {
      "block": "__puya_arc4_router___register_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "95": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "96": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "97": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "99": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "100": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "103": {
      "callsub": "smart_contracts.game.contract.Game.register",
      "op": "callsub register",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "106": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "107": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "108": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "109": {
      "op": "log",
      "stack_out": []
    },
    "110": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "111": {
      "retsub": true,
      "op": "retsub"
    },
    "112": {
      "block": "__puya_arc4_router___fund_account_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "114": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "115": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "116": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "118": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "119": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "121": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "122": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "123": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "124": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "126": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "127": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "128": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "129": {
      "callsub": "smart_contracts.game.contract.Game.fund_account",
      "op": "callsub fund_account",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "132": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "133": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%15#0"
      ]
    },
    "134": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "135": {
      "op": "log",
      "stack_out": []
    },
    "136": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "137": {
      "retsub": true,
      "op": "retsub"
    },
    "138": {
      "block": "__puya_arc4_router___buy_asset_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "140": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "141": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "142": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "144": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "145": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "148": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "151": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "154": {
      "op": "btoi",
      "defined_out": [
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "155": {
      "callsub": "smart_contracts.game.contract.Game.buy_asset",
      "op": "callsub buy_asset",
      "stack_out": []
    },
    "158": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "159": {
      "retsub": true,
      "op": "retsub"
    },
    "160": {
      "block": "__puya_arc4_router___admin_upsert_asset_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "162": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "163": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "164": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "166": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "167": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "170": {
      "callsub": "smart_contracts.game.contract.Game.admin_upsert_asset",
      "op": "callsub admin_upsert_asset",
      "stack_out": []
    },
    "173": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "174": {
      "retsub": true,
      "op": "retsub"
    },
    "175": {
      "block": "__puya_arc4_router___sellback_asset_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "177": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "182": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "185": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "188": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "191": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%37#0"
      ]
    },
    "192": {
      "callsub": "smart_contracts.game.contract.Game.sellback_asset",
      "op": "callsub sellback_asset",
      "stack_out": []
    },
    "195": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "196": {
      "retsub": true,
      "op": "retsub"
    },
    "197": {
      "block": "__puya_arc4_router___bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "199": {
      "op": "bnz __puya_arc4_router___after_if_else@13",
      "stack_out": []
    },
    "202": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "204": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "205": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "206": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "207": {
      "retsub": true,
      "op": "retsub"
    },
    "208": {
      "block": "__puya_arc4_router___after_if_else@13",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "209": {
      "retsub": true,
      "op": "retsub"
    },
    "210": {
      "subroutine": "smart_contracts.game.contract.Game.register",
      "params": {
        "name#0": "bytes"
      },
      "block": "register",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "213": {
      "op": "bytec_0 // \"user\""
    },
    "214": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"user\"",
        "tmp%0#0"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "217": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "218": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "220": {
      "op": "bnz register_after_if_else@2",
      "stack_out": []
    },
    "223": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "225": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "226": {
      "op": "pushbytes 0x0012",
      "defined_out": [
        "0x0012",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x0012"
      ]
    },
    "230": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "231": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "241": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "242": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "name#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "name#0 (copy)"
      ]
    },
    "244": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "245": {
      "op": "bytec_0 // \"user\""
    },
    "246": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "encoded_tuple_buffer%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "\"user\"",
        "tmp%2#0"
      ]
    },
    "248": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "249": {
      "op": "dup",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "250": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0",
        "{box_del}"
      ]
    },
    "251": {
      "op": "pop",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%3#0"
      ]
    },
    "252": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "253": {
      "op": "box_put",
      "stack_out": []
    },
    "254": {
      "block": "register_after_if_else@2",
      "stack_in": [],
      "op": "bytec_0 // \"user\""
    },
    "255": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "\"user\"",
        "tmp%4#0"
      ]
    },
    "257": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "258": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "259": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "260": {
      "retsub": true,
      "op": "retsub"
    },
    "261": {
      "subroutine": "smart_contracts.game.contract.Game.fund_account",
      "params": {
        "payment#0": "uint64"
      },
      "block": "fund_account",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "264": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "266": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "268": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "270": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "271": {
      "error": "Payment receiver must be the application address",
      "op": "assert // Payment receiver must be the application address",
      "stack_out": []
    },
    "272": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "274": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "276": {
      "op": "bytec_0 // \"user\"",
      "defined_out": [
        "\"user\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"user\""
      ]
    },
    "277": {
      "op": "swap",
      "stack_out": [
        "\"user\"",
        "tmp%3#0"
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "279": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "280": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "281": {
      "op": "bury 1",
      "stack_out": [
        "tmp%4#0",
        "maybe_exists%0#0"
      ]
    },
    "283": {
      "error": "User must be registered",
      "op": "assert // User must be registered",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "284": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "285": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "286": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0"
      ]
    },
    "287": {
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0"
      ]
    },
    "291": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "payment#0 (copy)"
      ]
    },
    "293": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "295": {
      "op": "+",
      "defined_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "to_encode%0#0"
      ]
    },
    "296": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "297": {
      "op": "dig 1",
      "stack_out": [
        "tmp%4#0",
        "val_as_bytes%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "299": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "300": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "tmp%4#0",
        "val_as_bytes%0#0",
        "maybe_value%2#0"
      ]
    },
    "301": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "302": {
      "op": "replace2 10",
      "defined_out": [
        "tmp%4#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "updated_data%0#0"
      ]
    },
    "304": {
      "op": "dig 1",
      "stack_out": [
        "tmp%4#0",
        "updated_data%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "306": {
      "op": "box_del",
      "defined_out": [
        "tmp%4#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%4#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "307": {
      "op": "pop",
      "stack_out": [
        "tmp%4#0",
        "updated_data%0#0"
      ]
    },
    "308": {
      "op": "dig 1",
      "stack_out": [
        "tmp%4#0",
        "updated_data%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "310": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "311": {
      "op": "box_put",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "312": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "313": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "314": {
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "317": {
      "retsub": true,
      "op": "retsub"
    },
    "318": {
      "subroutine": "smart_contracts.game.contract.Game.buy_asset",
      "params": {
        "asset_id#0": "bytes",
        "quantity#0": "uint64"
      },
      "block": "buy_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "321": {
      "op": "bytec_0 // \"user\""
    },
    "322": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"user\"",
        "tmp%0#0"
      ]
    },
    "324": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "325": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "326": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "328": {
      "error": "User must be registered",
      "op": "assert // User must be registered",
      "stack_out": []
    },
    "329": {
      "op": "bytec_1 // \"asset\"",
      "defined_out": [
        "\"asset\""
      ],
      "stack_out": [
        "\"asset\""
      ]
    },
    "330": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"asset\"",
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "\"asset\"",
        "asset_id#0 (copy)"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "333": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "334": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "335": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "337": {
      "error": "Invalid asset ID",
      "op": "assert // Invalid asset ID",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "338": {
      "op": "bytec_0 // \"user\""
    },
    "339": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"user\"",
        "tmp%3#0"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "342": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "343": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "344": {
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "347": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "user_balance#0"
      ]
    },
    "348": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "user_balance#0",
        "tmp%2#0 (copy)"
      ]
    },
    "350": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "user_balance#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "351": {
      "error": "check self.asset entry exists",
      "op": "assert // check self.asset entry exists",
      "stack_out": [
        "tmp%2#0",
        "user_balance#0",
        "maybe_value%3#0"
      ]
    },
    "352": {
      "op": "extract 4 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0",
        "user_balance#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "user_balance#0",
        "tmp%7#0"
      ]
    },
    "355": {
      "op": "btoi",
      "defined_out": [
        "asset_price#0",
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "user_balance#0",
        "asset_price#0"
      ]
    },
    "356": {
      "op": "uncover 2",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%2#0"
      ]
    },
    "358": {
      "op": "box_len",
      "defined_out": [
        "asset_price#0",
        "check%0#0",
        "user_balance#0",
        "value%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "359": {
      "error": "check self.asset entry exists",
      "op": "assert // check self.asset entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0"
      ]
    },
    "360": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "asset_price#0",
        "user_balance#0",
        "value%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0",
        "8"
      ]
    },
    "361": {
      "op": "+",
      "defined_out": [
        "a#0",
        "asset_price#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "a#0"
      ]
    },
    "362": {
      "op": "intc_3 // 400",
      "defined_out": [
        "400",
        "a#0",
        "asset_price#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "a#0",
        "400"
      ]
    },
    "363": {
      "op": "*",
      "defined_out": [
        "asset_price#0",
        "tmp%9#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%9#0"
      ]
    },
    "364": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "asset_price#0",
        "tmp%9#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%9#0",
        "2500"
      ]
    },
    "367": {
      "op": "+",
      "defined_out": [
        "asset_price#0",
        "mbr_per_unit#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr_per_unit#0"
      ]
    },
    "368": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "mbr_per_unit#0",
        "asset_price#0"
      ]
    },
    "369": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_price#0",
        "mbr_per_unit#0",
        "quantity#0 (copy)",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "mbr_per_unit#0",
        "asset_price#0",
        "quantity#0 (copy)"
      ]
    },
    "371": {
      "op": "*",
      "defined_out": [
        "mbr_per_unit#0",
        "tmp%10#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "mbr_per_unit#0",
        "tmp%10#0"
      ]
    },
    "372": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "tmp%10#0",
        "mbr_per_unit#0"
      ]
    },
    "373": {
      "op": "frame_dig -1",
      "stack_out": [
        "user_balance#0",
        "tmp%10#0",
        "mbr_per_unit#0",
        "quantity#0 (copy)"
      ]
    },
    "375": {
      "op": "*",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "376": {
      "op": "+",
      "defined_out": [
        "total#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "total#0"
      ]
    },
    "377": {
      "op": "dup2",
      "defined_out": [
        "total#0",
        "total#0 (copy)",
        "user_balance#0",
        "user_balance#0 (copy)"
      ],
      "stack_out": [
        "user_balance#0",
        "total#0",
        "user_balance#0 (copy)",
        "total#0 (copy)"
      ]
    },
    "378": {
      "op": ">=",
      "defined_out": [
        "tmp%12#0",
        "total#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "total#0",
        "tmp%12#0"
      ]
    },
    "379": {
      "error": "Insufficient funds",
      "op": "assert // Insufficient funds",
      "stack_out": [
        "user_balance#0",
        "total#0"
      ]
    },
    "380": {
      "op": "-",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "381": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "382": {
      "op": "bytec_0 // \"user\""
    },
    "383": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%13#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"user\"",
        "tmp%13#0"
      ]
    },
    "385": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%14#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "387": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%14#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%14#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "388": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%14#0",
        "maybe_value%4#0"
      ]
    },
    "389": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "maybe_value%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "391": {
      "op": "replace2 10",
      "defined_out": [
        "tmp%14#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "updated_data%0#0"
      ]
    },
    "393": {
      "op": "dig 1",
      "stack_out": [
        "tmp%14#0",
        "updated_data%0#0",
        "tmp%14#0 (copy)"
      ]
    },
    "395": {
      "op": "box_del",
      "defined_out": [
        "tmp%14#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%14#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "396": {
      "op": "pop",
      "stack_out": [
        "tmp%14#0",
        "updated_data%0#0"
      ]
    },
    "397": {
      "op": "box_put",
      "stack_out": []
    },
    "398": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "400": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%15#0",
        "asset_id#0 (copy)"
      ]
    },
    "402": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "403": {
      "op": "sha256",
      "defined_out": [
        "user_asset_id#0"
      ],
      "stack_out": [
        "user_asset_id#0"
      ]
    },
    "404": {
      "op": "bytec_3 // \"user_asset\"",
      "defined_out": [
        "\"user_asset\"",
        "user_asset_id#0"
      ],
      "stack_out": [
        "user_asset_id#0",
        "\"user_asset\""
      ]
    },
    "405": {
      "op": "swap",
      "stack_out": [
        "\"user_asset\"",
        "user_asset_id#0"
      ]
    },
    "406": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "407": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%17#0"
      ]
    },
    "408": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "409": {
      "op": "bury 1",
      "stack_out": [
        "tmp%17#0",
        "maybe_exists%5#0"
      ]
    },
    "411": {
      "op": "bz buy_asset_else_body@2",
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "414": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "415": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "416": {
      "op": "swap",
      "stack_out": [
        "tmp%17#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ]
    },
    "417": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value_converted%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "maybe_exists%6#0",
        "maybe_value_converted%0#0"
      ]
    },
    "418": {
      "op": "swap",
      "stack_out": [
        "tmp%17#0",
        "maybe_value_converted%0#0",
        "maybe_exists%6#0"
      ]
    },
    "419": {
      "error": "check self.user_asset entry exists",
      "op": "assert // check self.user_asset entry exists",
      "stack_out": [
        "tmp%17#0",
        "maybe_value_converted%0#0"
      ]
    },
    "420": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "maybe_value_converted%0#0",
        "quantity#0 (copy)"
      ]
    },
    "422": {
      "op": "+",
      "defined_out": [
        "new_box_value%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "new_box_value%0#0"
      ]
    },
    "423": {
      "op": "itob",
      "defined_out": [
        "new_box_value%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "new_box_value%1#0"
      ]
    },
    "424": {
      "op": "box_put",
      "stack_out": []
    },
    "425": {
      "op": "b buy_asset_after_if_else@3"
    },
    "428": {
      "block": "buy_asset_else_body@2",
      "stack_in": [
        "tmp%17#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "quantity#0 (copy)"
      ]
    },
    "430": {
      "op": "itob",
      "defined_out": [
        "new_box_value%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "new_box_value%2#0"
      ]
    },
    "431": {
      "op": "box_put",
      "stack_out": []
    },
    "432": {
      "block": "buy_asset_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "433": {
      "subroutine": "smart_contracts.game.contract.Game.admin_upsert_asset",
      "params": {
        "asset#0": "bytes"
      },
      "block": "admin_upsert_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "436": {
      "op": "txn Sender"
    },
    "438": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "440": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "441": {
      "error": "Only the creator can call this method",
      "op": "assert // Only the creator can call this method",
      "stack_out": []
    },
    "442": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "444": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)",
        "0"
      ]
    },
    "445": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "item_start_offset%0#0"
      ]
    },
    "446": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_start_offset%0#0",
        "asset#0 (copy)"
      ]
    },
    "448": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "asset#0 (copy)",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "item_start_offset%0#0",
        "asset#0 (copy)",
        "2"
      ]
    },
    "450": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0"
      ],
      "stack_out": [
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "451": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "asset#0 (copy)"
      ]
    },
    "453": {
      "op": "cover 2",
      "stack_out": [
        "asset#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "455": {
      "op": "substring3",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "456": {
      "op": "sha256",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "457": {
      "op": "bytec_1 // \"asset\"",
      "defined_out": [
        "\"asset\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"asset\""
      ]
    },
    "458": {
      "op": "swap",
      "stack_out": [
        "\"asset\"",
        "tmp%4#0"
      ]
    },
    "459": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "460": {
      "op": "dup",
      "defined_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ]
    },
    "461": {
      "op": "box_del",
      "defined_out": [
        "tmp%5#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%5#0",
        "{box_del}"
      ]
    },
    "462": {
      "op": "pop",
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "463": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%5#0",
        "asset#0 (copy)"
      ]
    },
    "465": {
      "op": "box_put",
      "stack_out": []
    },
    "466": {
      "retsub": true,
      "op": "retsub"
    },
    "467": {
      "subroutine": "smart_contracts.game.contract.Game.sellback_asset",
      "params": {
        "asset_id#0": "bytes",
        "quantity#0": "uint64"
      },
      "block": "sellback_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "470": {
      "op": "bytec_0 // \"user\""
    },
    "471": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"user\"",
        "tmp%0#0"
      ]
    },
    "473": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "474": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "475": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "477": {
      "error": "User must be registered",
      "op": "assert // User must be registered",
      "stack_out": []
    },
    "478": {
      "op": "bytec_1 // \"asset\"",
      "defined_out": [
        "\"asset\""
      ],
      "stack_out": [
        "\"asset\""
      ]
    },
    "479": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"asset\"",
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "\"asset\"",
        "asset_id#0 (copy)"
      ]
    },
    "481": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "482": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "483": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "484": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_exists%1#0"
      ]
    },
    "486": {
      "error": "Invalid asset ID",
      "op": "assert // Invalid asset ID",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "487": {
      "op": "bytec_0 // \"user\""
    },
    "488": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"user\"",
        "tmp%3#0"
      ]
    },
    "490": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "491": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "492": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "493": {
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "496": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "user_balance#0"
      ]
    },
    "497": {
      "op": "swap",
      "defined_out": [
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "tmp%2#0"
      ]
    },
    "498": {
      "op": "dup",
      "stack_out": [
        "user_balance#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "499": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "tmp%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "500": {
      "error": "check self.asset entry exists",
      "op": "assert // check self.asset entry exists",
      "stack_out": [
        "user_balance#0",
        "tmp%2#0",
        "maybe_value%3#0"
      ]
    },
    "501": {
      "op": "extract 4 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "504": {
      "op": "btoi",
      "defined_out": [
        "asset_price#0",
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "tmp%2#0",
        "asset_price#0"
      ]
    },
    "505": {
      "op": "swap",
      "defined_out": [
        "asset_price#0",
        "tmp%2#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%2#0"
      ]
    },
    "506": {
      "op": "box_len",
      "defined_out": [
        "asset_price#0",
        "check%0#0",
        "user_balance#0",
        "value%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "507": {
      "error": "check self.asset entry exists",
      "op": "assert // check self.asset entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0"
      ]
    },
    "508": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "asset_price#0",
        "user_balance#0",
        "value%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "value%0#0",
        "8"
      ]
    },
    "509": {
      "op": "+",
      "defined_out": [
        "asset_price#0",
        "tmp%9#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%9#0"
      ]
    },
    "510": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_price#0",
        "quantity#0 (copy)",
        "tmp%9#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%9#0",
        "quantity#0 (copy)"
      ]
    },
    "512": {
      "op": "*",
      "defined_out": [
        "a#0",
        "asset_price#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "a#0"
      ]
    },
    "513": {
      "op": "intc_3 // 400",
      "defined_out": [
        "400",
        "a#0",
        "asset_price#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "a#0",
        "400"
      ]
    },
    "514": {
      "op": "*",
      "defined_out": [
        "asset_price#0",
        "tmp%10#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%10#0"
      ]
    },
    "515": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "asset_price#0",
        "tmp%10#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "tmp%10#0",
        "2500"
      ]
    },
    "518": {
      "op": "+",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0"
      ]
    },
    "519": {
      "op": "txn Sender",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%11#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%11#0"
      ]
    },
    "521": {
      "op": "frame_dig -2",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%11#0",
        "asset_id#0 (copy)"
      ]
    },
    "523": {
      "op": "concat",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%12#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%12#0"
      ]
    },
    "524": {
      "op": "sha256",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "user_asset_id#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "user_asset_id#0"
      ]
    },
    "525": {
      "op": "bytec_3 // \"user_asset\"",
      "defined_out": [
        "\"user_asset\"",
        "asset_price#0",
        "mbr#0",
        "user_asset_id#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "user_asset_id#0",
        "\"user_asset\""
      ]
    },
    "526": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "\"user_asset\"",
        "user_asset_id#0"
      ]
    },
    "527": {
      "op": "concat",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0"
      ]
    },
    "528": {
      "op": "dupn 2",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "530": {
      "op": "box_len",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "531": {
      "op": "bury 1",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_exists%4#0"
      ]
    },
    "533": {
      "error": "No assets found",
      "op": "assert // No assets found",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "534": {
      "op": "dup",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "535": {
      "op": "box_get",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "536": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ]
    },
    "537": {
      "op": "btoi",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%5#0",
        "maybe_value_converted%0#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_exists%5#0",
        "maybe_value_converted%0#0"
      ]
    },
    "538": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%0#0",
        "maybe_exists%5#0"
      ]
    },
    "539": {
      "error": "check self.user_asset entry exists",
      "op": "assert // check self.user_asset entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%0#0"
      ]
    },
    "540": {
      "op": "frame_dig -1",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%0#0",
        "quantity#0 (copy)"
      ]
    },
    "542": {
      "op": ">=",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%15#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "543": {
      "error": "Insufficient amount of assets",
      "op": "assert // Insufficient amount of assets",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "544": {
      "op": "dup",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "545": {
      "op": "box_get",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "546": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ]
    },
    "547": {
      "op": "btoi",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%6#0",
        "maybe_value_converted%1#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_exists%6#0",
        "maybe_value_converted%1#0"
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%1#0",
        "maybe_exists%6#0"
      ]
    },
    "549": {
      "error": "check self.user_asset entry exists",
      "op": "assert // check self.user_asset entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%1#0"
      ]
    },
    "550": {
      "op": "frame_dig -1",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "maybe_value_converted%1#0",
        "quantity#0 (copy)"
      ]
    },
    "552": {
      "op": "-",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "new_box_value%0#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "new_box_value%0#0"
      ]
    },
    "553": {
      "op": "itob",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "new_box_value%1#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "new_box_value%1#0"
      ]
    },
    "554": {
      "op": "dig 1",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "new_box_value%1#0",
        "tmp%13#0 (copy)"
      ]
    },
    "556": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "new_box_value%1#0"
      ]
    },
    "557": {
      "op": "box_put",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "558": {
      "op": "box_get",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "559": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ]
    },
    "560": {
      "op": "btoi",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%7#0",
        "maybe_value_converted%2#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "maybe_exists%7#0",
        "maybe_value_converted%2#0"
      ]
    },
    "561": {
      "op": "swap",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "maybe_value_converted%2#0",
        "maybe_exists%7#0"
      ]
    },
    "562": {
      "error": "check self.user_asset entry exists",
      "op": "assert // check self.user_asset entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "maybe_value_converted%2#0"
      ]
    },
    "563": {
      "op": "bnz sellback_asset_after_if_else@2",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0"
      ]
    },
    "566": {
      "op": "frame_dig 3",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%13#0"
      ]
    },
    "568": {
      "op": "box_del",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "user_balance#0",
        "{box_del}"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "{box_del}"
      ]
    },
    "569": {
      "op": "pop",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0"
      ]
    },
    "570": {
      "block": "sellback_asset_after_if_else@2",
      "stack_in": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "asset_price#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "asset_price#0"
      ]
    },
    "572": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_price#0",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "asset_price#0",
        "quantity#0 (copy)"
      ]
    },
    "574": {
      "op": "*",
      "defined_out": [
        "asset_price#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%20#0"
      ]
    },
    "575": {
      "op": "frame_dig 0",
      "defined_out": [
        "asset_price#0",
        "tmp%20#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%20#0",
        "user_balance#0"
      ]
    },
    "577": {
      "op": "+",
      "defined_out": [
        "asset_price#0",
        "tmp%21#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%21#0"
      ]
    },
    "578": {
      "op": "frame_dig 2",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%21#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%21#0",
        "mbr#0"
      ]
    },
    "580": {
      "op": "+",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "to_encode%0#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "to_encode%0#0"
      ]
    },
    "581": {
      "op": "itob",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "user_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0"
      ]
    },
    "582": {
      "op": "bytec_0 // \"user\""
    },
    "583": {
      "op": "txn Sender",
      "defined_out": [
        "\"user\"",
        "asset_price#0",
        "mbr#0",
        "tmp%22#0",
        "user_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0",
        "\"user\"",
        "tmp%22#0"
      ]
    },
    "585": {
      "op": "concat",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%23#0",
        "user_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0",
        "tmp%23#0"
      ]
    },
    "586": {
      "op": "dup",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "user_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ]
    },
    "587": {
      "op": "box_get",
      "defined_out": [
        "asset_price#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "mbr#0",
        "tmp%23#0",
        "user_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "588": {
      "error": "check self.user entry exists",
      "op": "assert // check self.user entry exists",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "val_as_bytes%0#0",
        "tmp%23#0",
        "maybe_value%8#0"
      ]
    },
    "589": {
      "op": "uncover 2",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%23#0",
        "maybe_value%8#0",
        "val_as_bytes%0#0"
      ]
    },
    "591": {
      "op": "replace2 10",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%23#0",
        "updated_data%0#0",
        "user_balance#0"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "593": {
      "op": "dig 1",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%23#0",
        "updated_data%0#0",
        "tmp%23#0 (copy)"
      ]
    },
    "595": {
      "op": "box_del",
      "defined_out": [
        "asset_price#0",
        "mbr#0",
        "tmp%23#0",
        "updated_data%0#0",
        "user_balance#0",
        "{box_del}"
      ],
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%23#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "596": {
      "op": "pop",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0",
        "tmp%23#0",
        "updated_data%0#0"
      ]
    },
    "597": {
      "op": "box_put",
      "stack_out": [
        "user_balance#0",
        "asset_price#0",
        "mbr#0",
        "tmp%13#0"
      ]
    },
    "598": {
      "retsub": true,
      "op": "retsub"
    }
  }
}