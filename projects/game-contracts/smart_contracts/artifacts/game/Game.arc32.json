{
    "hints": {
        "register(string)(uint64,string,uint64)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "User",
                    "elements": [
                        [
                            "registered_at",
                            "uint64"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "balance",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "fund_account(pay)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "buy_asset(byte[],uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "admin_upsert_asset((string,string,uint64))void": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "asset": {
                    "name": "GameAsset",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "description",
                            "string"
                        ],
                        [
                            "price",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "sellback_asset(byte[],uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuZ2FtZS5jb250cmFjdC5HYW1lLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Game",
        "methods": [
            {
                "name": "register",
                "args": [
                    {
                        "type": "string",
                        "name": "name",
                        "desc": "The user's name."
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,string,uint64)",
                    "desc": "The user's profile information."
                },
                "desc": "Registers a user and returns their profile information."
            },
            {
                "name": "fund_account",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment",
                        "desc": "The payment transaction."
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64",
                    "desc": "The user's updated balance."
                },
                "desc": "Funds a user's account."
            },
            {
                "name": "buy_asset",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "asset_id",
                        "desc": "The hash of the asset name."
                    },
                    {
                        "type": "uint64",
                        "name": "quantity",
                        "desc": "The quantity to purchase."
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Buys a game asset."
            },
            {
                "name": "admin_upsert_asset",
                "args": [
                    {
                        "type": "(string,string,uint64)",
                        "name": "asset",
                        "desc": "The game asset information."
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Updates or inserts a game asset."
            },
            {
                "name": "sellback_asset",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "asset_id",
                        "desc": "The hash of the asset name."
                    },
                    {
                        "type": "uint64",
                        "name": "quantity",
                        "desc": "The quantity to purchase."
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Sell back a game asset to the application."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}